geom_violin(aes(color = Continent, fill = Continent), alpha = 0.5) +
geom_jitter(aes(shape = Quality), color = "gray58",
width = 0.2, size = 1, alpha = 0.7) +
scale_shape_manual(values = c(1, 3)) +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)]) +
scale_fill_manual(values = palette_OkabeIto[c(1:3, 7)]) +
geom_hline(yintercept = 4683603, linetype = "dashed", color = "gray") +
#facet_wrap(~Genome_type, ncol = 1, scales = "free_y") +
facet_grid(~Genome_type, scales = "free", space = "free") +
main_theme + ylab("Genome size") + xlab("") +
theme(axis.text.x = element_blank())
p2 <- ggplot(meta, aes(Country, Copy_number)) +
geom_violin(aes(color = Continent, fill = Continent), alpha = 0.5) +
geom_jitter(aes(shape = Quality), color = "gray58",
width = 0.2, size = 1, alpha = 0.7) +
#geom_boxplot(width=0.2, color = "gray38", outlier.shape = NA) +
geom_hline(yintercept = 61, linetype = "dashed", color = "gray") +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)]) +
scale_fill_manual(values = palette_OkabeIto[c(1:3, 7)]) +
scale_shape_manual(values = c(1, 3)) +
#facet_wrap(~Genome_type, ncol = 1, scales = "free_y") +
facet_grid(~Genome_type, scales = "free", space = "free") +
main_theme + ylab("Copy number of susC") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#p2
p <- plot_grid(p1, p2, nrow = 2, align = "hv", axis = "l")
p
#p2
p <- plot_grid(p1, p2, nrow = 2, align = "hv", axis = "l",
rel_heights = c(1, 1.2))
p
#p2
p <- plot_grid(p1, p2, nrow = 2, align = "hv", axis = "l",
rel_heights = c(1, 1))
p
p1 <- ggplot(meta, aes(Country, Length)) +
#  geom_violin(aes(color = Continent)) +
geom_boxplot(width=0.2, color = "gray38", fill = "NA", outlier.shape = NA) +
geom_violin(aes(color = Continent, fill = Continent), alpha = 0.5) +
geom_jitter(aes(shape = Quality), color = "gray58",
width = 0.2, size = 1, alpha = 0.7) +
scale_shape_manual(values = c(1, 3)) +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)]) +
scale_fill_manual(values = palette_OkabeIto[c(1:3, 7)]) +
geom_hline(yintercept = 4683603, linetype = "dashed", color = "gray") +
#facet_wrap(~Genome_type, ncol = 1, scales = "free_y") +
facet_grid(~Genome_type, scales = "free", space = "free") +
main_theme + ylab("Genome size") + xlab("") +
theme(axis.text.x = element_blank())
p1
?fct_inorder
?fct_reorder
meta$Country <- fct_reorder(meta$Genome_type, meta$Country, .x = meta$Length,
.fun = median, .desc = T)
meta$Country <- fct_reorder(meta$Country, .x = meta$Length,
.fun = median, .desc = T)
meta$Quality <- ifelse((meta$Completeness > 90 & meta$Contamination < 5),
"High",
ifelse((meta$Completeness >50 & meta$Contamination < 10),
"Medium", low))
## One MAG has size 7700188, filter out as completeness only 58.62
meta <- meta[meta$Length < 7700188, ]
p1 <- ggplot(meta, aes(Country, Length)) +
#  geom_violin(aes(color = Continent)) +
geom_boxplot(width=0.2, color = "gray38", fill = "NA", outlier.shape = NA) +
geom_violin(aes(color = Continent, fill = Continent), alpha = 0.5) +
geom_jitter(aes(shape = Quality), color = "gray58",
width = 0.2, size = 1, alpha = 0.7) +
scale_shape_manual(values = c(1, 3)) +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)]) +
scale_fill_manual(values = palette_OkabeIto[c(1:3, 7)]) +
geom_hline(yintercept = 4683603, linetype = "dashed", color = "gray") +
#facet_wrap(~Genome_type, ncol = 1, scales = "free_y") +
facet_grid(~Genome_type, scales = "free", space = "free") +
main_theme + ylab("Genome size") + xlab("") +
theme(axis.text.x = element_blank())
p2 <- ggplot(meta, aes(Country, Copy_number)) +
geom_violin(aes(color = Continent, fill = Continent), alpha = 0.5) +
geom_jitter(aes(shape = Quality), color = "gray58",
width = 0.2, size = 1, alpha = 0.7) +
#geom_boxplot(width=0.2, color = "gray38", outlier.shape = NA) +
geom_hline(yintercept = 61, linetype = "dashed", color = "gray") +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)]) +
scale_fill_manual(values = palette_OkabeIto[c(1:3, 7)]) +
scale_shape_manual(values = c(1, 3)) +
#facet_wrap(~Genome_type, ncol = 1, scales = "free_y") +
facet_grid(~Genome_type, scales = "free", space = "free") +
main_theme + ylab("Copy number of susC") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#p2
p <- plot_grid(p1, p2, nrow = 2, align = "hv", axis = "l",
rel_heights = c(1, 1))
p
ggsave("../04.figures/Figure_S7.pdf", width = 12, height = 7)
p1 <- ggplot(meta, aes(Country, Length)) +
#  geom_violin(aes(color = Continent)) +
geom_boxplot(width=0.2, color = "gray38", fill = "NA", outlier.shape = NA) +
geom_violin(aes(color = Continent, fill = Continent), alpha = 0.5) +
geom_jitter(aes(shape = Quality), color = "gray58",
width = 0.2, size = 1, alpha = 0.6) +
scale_shape_manual(values = c(1, 3)) +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)]) +
scale_fill_manual(values = palette_OkabeIto[c(1:3, 7)]) +
geom_hline(yintercept = 4683603, linetype = "dashed", color = "gray") +
#facet_wrap(~Genome_type, ncol = 1, scales = "free_y") +
facet_grid(~Genome_type, scales = "free", space = "free") +
main_theme + ylab("Genome size") + xlab("") +
theme(axis.text.x = element_blank())
p2 <- ggplot(meta, aes(Country, Copy_number)) +
geom_violin(aes(color = Continent, fill = Continent), alpha = 0.5) +
geom_jitter(aes(shape = Quality), color = "gray58",
width = 0.2, size = 1, alpha = 0.6) +
#geom_boxplot(width=0.2, color = "gray38", outlier.shape = NA) +
geom_hline(yintercept = 61, linetype = "dashed", color = "gray") +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)]) +
scale_fill_manual(values = palette_OkabeIto[c(1:3, 7)]) +
scale_shape_manual(values = c(1, 3)) +
#facet_wrap(~Genome_type, ncol = 1, scales = "free_y") +
facet_grid(~Genome_type, scales = "free", space = "free") +
main_theme + ylab("Copy number of susC") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#p2
p <- plot_grid(p1, p2, nrow = 2, align = "hv", axis = "l",
rel_heights = c(1, 1))
ggsave("../04.figures/Figure_S7.pdf", width = 10, height = 7)
ggsave("../04.figures/Figure_S7.pdf", width = 10, height = 8)
colnames(meta)
summary(aov(Copy_number ~ Genome_type * Length * Completeness * Contamination * Country,
meta))
summary(aov(Copy_number ~ Genome_type * Length * Contamination * Country,
meta))
summary(aov(Copy_number ~ Length * Genome_type * Contamination * Country,
meta))
summary(aov(Copy_number ~ Length * Contamination * Genome_type * Country,
meta))
ggplot(meta, aes(Length, Copy_number)) +
geom_point()
ggplot(meta, aes(Length, Copy_number)) +
geom_point(aes(color = Continent)) +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)]) +
main_theme
ggplot(meta, aes(Length, Copy_number)) +
geom_point(aes(color = Continent)) +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)])
ggplot(meta, aes(Length, Copy_number)) +
geom_point(aes(color = Continent)) +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)]) +
geom_smooth(method = "lm", colour = "black")
ggplot(meta, aes(Length, Copy_number)) +
geom_point(aes(color = Continent)) +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)]) +
geom_smooth(method = "lm", colour = "gray")
?geom_smooth
ggplot(meta, aes(Length, Copy_number, color = Continent)) +
geom_point() +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)]) +
geom_smooth(method = "lm")
ggplot(meta, aes(Length, Copy_number, color = Continent)) +
geom_point(shape = 1) +
scale_color_manual(values = palette_OkabeIto[c(1:3, 7)]) +
geom_smooth(method = "lm")
cor(meta$Length, meta$Copy_number)
summary(aov(Copy_number ~ Length * Contamination * Genome_type * Country,
meta))
ggsave("20240925_MAGs_length_vs_SusC.pdf")
showCols(cl = "gray")
ra <- read.table("~/Desktop/20240926_metaG_profile_soil_ghada.txt",
header = T, sep = "\t")
head(ra)
ggplot(ra, aes(Sample, aRA_normalized, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = getOI(np))
np <- length(unique(ra$Phylum))
np
unique(ra$Phylum)
## Figure S2 of BQH
library(ggplot2)
library(RColorBrewer)
palette_OkabeIto <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
getOI = colorRampPalette(palette_OkabeIto)
getOI(np)
colors[c(7, 2, 4, 8)] <- c(p_firmicutes, p_actino, p_proteo, archae)
p_firmicutes <- "#9c5de5"
p_actino <- "#2b9d8f"
p_proteo <- "#e53846"
archae <- "#6b7ca5"
unknown <- "#00a9e8"
np <- length(unique(ra$Phylum))
colors <- getOI(np)
colors[c(7, 2, 4, 8)] <- c(p_firmicutes, p_actino, p_proteo, archae)
colors
ggplot(ra, aes(Sample, aRA_normalized, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = getOI(np))
ggplot(ra, aes(Sample, aRA_normalized, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
colors[c(8, 2, 12, 13)] <- c(p_firmicutes, p_actino, p_proteo, archae)
colors <- getOI(np)
colors[c(8, 2, 12, 13)] <- c(p_firmicutes, p_actino, p_proteo, archae)
ggplot(ra, aes(Sample, aRA_normalized, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
colors
head(ra)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
getDark2 = colorRampPalette(brewer.pal(8, "Dark2"))
colors <- getDark2(np)
colors[c(8, 2, 12, 13)] <- c(p_firmicutes, p_actino, p_proteo, archae)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
getSet1 = colorRampPalette(brewer.pal(9, "Set1"))
colors <- getSet1(np)
colors[c(8, 2, 12, 13)] <- c(p_firmicutes, p_actino, p_proteo, archae)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
colors[c(8, 2, 12, 13, 7)] <- c(p_firmicutes, p_actino, p_proteo, archae, archae)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
colors[c(8, 2, 12, 13, 7)] <- c(p_firmicutes, p_actino, p_proteo, archae, "salmon")
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
colors[1] <- "lime"
colors[c(8, 2, 12, 13, 7)] <- c(p_firmicutes, p_actino, p_proteo, archae, "salmon")
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
colors[1] <- "lightblue"
colors[c(8, 2, 12, 13, 7)] <- c(p_firmicutes, p_actino, p_proteo, archae, "salmon")
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
colors[1] <- "lightblue4"
colors[c(8, 2, 12, 13, 7)] <- c(p_firmicutes, p_actino, p_proteo, archae, "salmon")
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
colors[1] <- "skyblue"
colors[c(8, 2, 12, 13, 7)] <- c(p_firmicutes, p_actino, p_proteo, archae, "salmon")
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
#main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
theme_bw()
?theme_bw()
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
theme_minimal() +
#main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
theme_bw()
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
theme_bw() +
#main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
theme_minimal() +
#main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
theme_light() +
#main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
theme_bw() +
#main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
#theme_bw() +
#main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
#theme_bw() +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
#theme_bw() +
#main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
#theme_bw() +
main_theme +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors)
main_theme
View(getOI)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors) +
theme(panel.background = element_blank(),
plot.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_text(colour = "black", size = 10),
text = element_text(family="sans"))
ggsave("20240926_Figure_S2.pdf", width = 5, height = 5)
getwd()
ggsave("20240926_Figure_S2.pdf", width = 7, height = 5)
ggsave("~/Desktop/20240926_Figure_S2.pdf", width = 7, height = 5)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors) +
labs(x="") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_text(colour = "black", size = 10),
text = element_text(family="sans"))
ggsave("~/Desktop/20240926_Figure_S2.pdf", width = 6, height = 5)
head(ra)
unique(ra$Sample)
ra[ra$Sample == "Meadow1", ]$Sample <- "M1"
unique(ra$Sample)
ra[ra$Sample == "Meadow2", ]$Sample <- "M2"
ra[ra$Sample == "Meadow3", ]$Sample <- "M3"
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
scale_x_discrete(limits = c("Meadow1", "Meadow2", "Meadow3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors) +
labs(x="") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_text(colour = "black", size = 10),
text = element_text(family="sans"))
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
scale_x_discrete(limits = c("M1", "M2", "M3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors) +
labs(x="") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_text(colour = "black", size = 10),
text = element_text(family="sans"))
ggsave("~/Desktop/20240926_Figure_S2.pdf", width = 6, height = 5)
ggplot(ra, aes(Sample, aRA, fill = Phylum)) +
geom_bar(stat = 'identity', position = "stack") +
scale_x_discrete(limits = c("M1", "M2", "M3",
"F3", "F5", "F9",
"F4", "F7", "F8")) +
# theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values = colors) +
labs(x="") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_text(colour = "black", size = 10),
text = element_text(family="sans"))
ggsave("~/Desktop/20240926_Figure_S2.pdf", width = 6, height = 5)
t <- read.table("~/Desktop/map1.txt", header = T, sep = "\t")
order <- t$Sample_ID
md1 <- read.table("~/Desktop/md1.txt", header = F, sep = "\t")
md2 <- read.table("~/Desktop/md2.txt", header = F, sep = "\t")
colnames(md1) <- c("Sample_ID", "Md5_R1")
head(md1)
md2 <- read.table("~/Desktop/md2.txt", header = F)
md1 <- read.table("~/Desktop/md1.txt", header = F)
head(md1)
head(t)
colnames(md1) <- c("R1_md5", "R1")
colnames(md2) <- c("R2_md5", "R2")
ll
t <- merge(t, md1)
t <- merge(t, md2)
head(t)
t2 <- t[match(t$Sample_ID, order), ]
head(t2)
t2 <- t[match(order, t$Sample_ID), ]
head(t2)
write.table("20240926_md5.txt", quote = F, sep = "\t", row.names = F)
write.table(t2, "20240926_md5.txt", quote = F, sep = "\t", row.names = F)
